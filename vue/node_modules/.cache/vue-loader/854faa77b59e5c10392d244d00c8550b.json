{"remainingRequest":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java_project\\pure-design\\vue\\src\\views\\Map.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Java_project\\pure-design\\vue\\src\\views\\Map.vue","mtime":1686479751979},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685880566717},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1685880569655},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685880566716},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1685881029547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQp2YXIgY29udGVudCA9IFsNCiAgICAiPGRpdiBzdHlsZT0nZm9udC1zaXplOiAxNHB4OyBjb2xvcjogcmVkOyB3aWR0aDogMjAwcHg7IGhlaWdodDogNTBweCc+6L+Z5piv5L+h5oGv56qX5Y+jPC9kaXY+Ig0KXTsNCg0KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIk1hcCIsDQogICAgZGF0YSgpIHsNCiAgICAgICAgcmV0dXJuIHt9DQogICAgfSwNCiAgICBjcmVhdGVkKCkgew0KDQogICAgfSwNCiAgICBtb3VudGVkKCkgew0KICAgICAgICAvLyDliJvlu7rlnLDlm77lrp7kvosNCiAgICAgICAgdmFyIG1hcCA9IG5ldyBBTWFwLk1hcCgiY29udGFpbmVyIiwgew0KICAgICAgICAgICAgem9vbTogMTIsDQogICAgICAgICAgICAvLyBjZW50ZXI6IFsxMTYuMzk2OTAxLDM5LjkxOTU0NF0sDQogICAgICAgICAgICByZXNpemVFbmFibGU6IHRydWUNCiAgICAgICAgfSkNCg0KICAgICAgICB2YXIgaW5mb1dpbmRvdyA9IG5ldyBBTWFwLkluZm9XaW5kb3coew0KICAgICAgICAgICAgYW5jaG9yOiAndG9wLXJpZ2h0JywNCiAgICAgICAgICAgIGNvbnRlbnQ6IGNvbnRlbnQuam9pbigiPGJyPiIpICAvL+S8oOWFpSBkb20g5a+56LGh77yM5oiW6ICFIGh0bWwg5a2X56ym5LiyDQogICAgICAgIH0pOw0KDQogICAgICAgIHZhciBjbGlja0hhbmRsZXIgPSBmdW5jdGlvbiAoZSkgew0KICAgICAgICAgICAgY29uc29sZS5sb2coJ+aCqOWcqFsgJyArIGUubG5nbGF0LmdldExuZygpICsgJywnICsgZS5sbmdsYXQuZ2V0TGF0KCkgKyAnIF3nmoTkvY3nva7ngrnlh7vkuoblnLDlm77vvIEnKTsNCg0KICAgICAgICAgICAgaW5mb1dpbmRvdy5vcGVuKG1hcCwgWzExNi4zOTY5MDEsIDM5LjkxOTU0NF0pOw0KICAgICAgICB9Ow0KDQogICAgICAgIC8vIOe7keWumuS6i+S7tg0KICAgICAgICAvLyBtYXAub24oJ2NsaWNrJywgY2xpY2tIYW5kbGVyKTsNCg0KICAgICAgICB2YXIgbWFya2VyID0gbmV3IEFNYXAuTWFya2VyKHsNCiAgICAgICAgICAgIHBvc2l0aW9uOiBuZXcgQU1hcC5MbmdMYXQoMTE2LjM5NjkwMSwgMzkuOTE5NTQ0KSwgICAvLyDnu4/nuqzluqblr7nosaHvvIzkuZ/lj6/ku6XmmK/nu4/nuqzluqbmnoTmiJDnmoTkuIDnu7TmlbDnu4RbMTE2LjM5LCAzOS45XQ0KICAgICAgICAgICAgdGl0bGU6ICfljJfkuqzmlYXlrqsnLA0KICAgICAgICAgICAgaWNvbjogJy8vdmRhdGEuYW1hcC5jb20vaWNvbnMvYjE4LzEvMi5wbmcnLA0KICAgICAgICAgICAgLy8gY29udGVudDogJzxkaXYgc3R5bGU9ImZvbnQtc2l6ZTogMTJweDsgd2lkdGg6IDEwMHB4Ij7ov5nmmK/miJHoh6rlrprkuYnnmoTlhoXlrrk8L2Rpdj4nDQogICAgICAgIH0pDQogICAgICAgIG1hcmtlci5vbignY2xpY2snLCBjbGlja0hhbmRsZXIpOw0KDQoNCiAgICAgICAgLy8g5bCG5Yib5bu655qE54K55qCH6K6w5re75Yqg5Yiw5bey5pyJ55qE5Zyw5Zu+5a6e5L6L77yaDQogICAgICAgIG1hcC5hZGQobWFya2VyKTsNCg0KDQogICAgICAgIC8vIHBhdGgg5piv6am+6L2m5a+86Iiq55qE6LW344CB6YCU5b6E5ZKM57uI54K577yM5pyA5aSa5pSv5oyBMTbkuKrpgJTnu4/ngrkNCiAgICAgICAgdmFyIHBhdGggPSBbXQ0KDQogICAgICAgIHBhdGgucHVzaChbMTE2LjMwMzg0MywgMzkuOTgzNDEyXSkNCiAgICAgICAgcGF0aC5wdXNoKFsxMTYuMzIxMzU0LCAzOS44OTY0MzZdKQ0KICAgICAgICBwYXRoLnB1c2goWzExNi40MDcwMTIsIDM5Ljk5MjA5M10pDQoNCiAgICAgICAgbWFwLnBsdWdpbignQU1hcC5EcmFnUm91dGUnLCBmdW5jdGlvbiAoKSB7DQogICAgICAgICAgICB2YXIgcm91dGUgPSBuZXcgQU1hcC5EcmFnUm91dGUobWFwLCBwYXRoLCBBTWFwLkRyaXZpbmdQb2xpY3kuTEVBU1RfRkVFKQ0KICAgICAgICAgICAgLy8g5p+l6K+i5a+86Iiq6Lev5b6E5bm25byA5ZCv5ouW5ou95a+86IiqDQogICAgICAgICAgICByb3V0ZS5zZWFyY2goKQ0KICAgICAgICB9KQ0KDQogICAgICAgIHZhciBwb2x5TGluZSA9IG5ldyBBTWFwLlBvbHlsaW5lKHsNCiAgICAgICAgICAgIHBhdGg6IHBhdGgsDQogICAgICAgICAgICBzdHJva2VXZWlnaHQ6IDUsDQogICAgICAgICAgICBib3JkZXJXZWlnaHQ6IDUsIC8vIOe6v+adoeWuveW6pu+8jOm7mOiupOS4uiAxDQogICAgICAgICAgICBzdHJva2VTdHlsZTogInNvbGlkIiwNCiAgICAgICAgICAgIHN0cm9rZUNvbG9yOiAnI0RDMTQzQycsIC8vIOe6v+adoeminOiJsg0KICAgICAgICAgICAgbGluZUpvaW46ICdyb3VuZCcgLy8g5oqY57q/5ouQ54K56L+e5o6l5aSE5qC35byPDQogICAgICAgIH0pDQogICAgICAgIG1hcC5hZGQocG9seUxpbmUpDQoNCg0KICAgICAgICAvL+WunuS+i+WMluWfjuW4guafpeivouexuw0KICAgICAgICBtYXAucGx1Z2luKCdBTWFwLkdlb2xvY2F0aW9uJywgZnVuY3Rpb24gKCkgew0KICAgICAgICAgICAgdmFyIGdlb2xvY2F0aW9uID0gbmV3IEFNYXAuR2VvbG9jYXRpb24oew0KICAgICAgICAgICAgICAgIC8vIOaYr+WQpuS9v+eUqOmrmOeyvuW6puWumuS9je+8jOm7mOiupO+8mnRydWUNCiAgICAgICAgICAgICAgICBlbmFibGVIaWdoQWNjdXJhY3k6IHRydWUsDQogICAgICAgICAgICAgICAgLy8g6K6+572u5a6a5L2N6LaF5pe25pe26Ze077yM6buY6K6k77ya5peg56m35aSnDQogICAgICAgICAgICAgICAgdGltZW91dDogMTAwMDAsDQogICAgICAgICAgICAgICAgLy8g5a6a5L2N5oyJ6ZKu55qE5YGc6Z2g5L2N572u55qE5YGP56e76YePDQogICAgICAgICAgICAgICAgb2Zmc2V0OiBbMTAsIDIwXSwNCiAgICAgICAgICAgICAgICAvLyAg5a6a5L2N5oiQ5Yqf5ZCO6LCD5pW05Zyw5Zu+6KeG6YeO6IyD5Zu05L2/5a6a5L2N5L2N572u5Y+K57K+5bqm6IyD5Zu06KeG6YeO5YaF5Y+v6KeB77yM6buY6K6k77yaZmFsc2UNCiAgICAgICAgICAgICAgICB6b29tVG9BY2N1cmFjeTogdHJ1ZSwNCiAgICAgICAgICAgICAgICAvLyAg5a6a5L2N5oyJ6ZKu55qE5o6S5pS+5L2N572uLCAgUkLooajnpLrlj7PkuIsNCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogJ1JCJw0KICAgICAgICAgICAgfSkNCg0KICAgICAgICAgICAgZ2VvbG9jYXRpb24uZ2V0Q3VycmVudFBvc2l0aW9uKGZ1bmN0aW9uIChzdGF0dXMsIHJlc3VsdCkgew0KICAgICAgICAgICAgICAgIGlmIChzdGF0dXMgPT0gJ2NvbXBsZXRlJykgew0KICAgICAgICAgICAgICAgICAgICBvbkNvbXBsZXRlKHJlc3VsdCkNCiAgICAgICAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgICAgICAgICBvbkVycm9yKHJlc3VsdCkNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KTsNCg0KICAgICAgICAgICAgZnVuY3Rpb24gb25Db21wbGV0ZShkYXRhKSB7DQogICAgICAgICAgICAgICAgLy8gZGF0YeaYr+WFt+S9k+eahOWumuS9jeS/oeaBrw0KICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGRhdGEpDQogICAgICAgICAgICB9DQoNCiAgICAgICAgICAgIGZ1bmN0aW9uIG9uRXJyb3IoZGF0YSkgew0KICAgICAgICAgICAgICAgIC8vIOWumuS9jeWHuumUmQ0KICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZGF0YSkNCiAgICAgICAgICAgIH0NCiAgICAgICAgfSkNCg0KICAgIH0sDQogICAgbWV0aG9kczoge30NCn0NCg=="},{"version":3,"sources":["Map.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Map.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <div id=\"container\" style=\"width: 100%; height: calc(100vh - 100px)\"></div>\r\n\r\n        <div id=\"info\"></div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nvar content = [\r\n    \"<div style='font-size: 14px; color: red; width: 200px; height: 50px'>这是信息窗口</div>\"\r\n];\r\n\r\n\r\nexport default {\r\n    name: \"Map\",\r\n    data() {\r\n        return {}\r\n    },\r\n    created() {\r\n\r\n    },\r\n    mounted() {\r\n        // 创建地图实例\r\n        var map = new AMap.Map(\"container\", {\r\n            zoom: 12,\r\n            // center: [116.396901,39.919544],\r\n            resizeEnable: true\r\n        })\r\n\r\n        var infoWindow = new AMap.InfoWindow({\r\n            anchor: 'top-right',\r\n            content: content.join(\"<br>\")  //传入 dom 对象，或者 html 字符串\r\n        });\r\n\r\n        var clickHandler = function (e) {\r\n            console.log('您在[ ' + e.lnglat.getLng() + ',' + e.lnglat.getLat() + ' ]的位置点击了地图！');\r\n\r\n            infoWindow.open(map, [116.396901, 39.919544]);\r\n        };\r\n\r\n        // 绑定事件\r\n        // map.on('click', clickHandler);\r\n\r\n        var marker = new AMap.Marker({\r\n            position: new AMap.LngLat(116.396901, 39.919544),   // 经纬度对象，也可以是经纬度构成的一维数组[116.39, 39.9]\r\n            title: '北京故宫',\r\n            icon: '//vdata.amap.com/icons/b18/1/2.png',\r\n            // content: '<div style=\"font-size: 12px; width: 100px\">这是我自定义的内容</div>'\r\n        })\r\n        marker.on('click', clickHandler);\r\n\r\n\r\n        // 将创建的点标记添加到已有的地图实例：\r\n        map.add(marker);\r\n\r\n\r\n        // path 是驾车导航的起、途径和终点，最多支持16个途经点\r\n        var path = []\r\n\r\n        path.push([116.303843, 39.983412])\r\n        path.push([116.321354, 39.896436])\r\n        path.push([116.407012, 39.992093])\r\n\r\n        map.plugin('AMap.DragRoute', function () {\r\n            var route = new AMap.DragRoute(map, path, AMap.DrivingPolicy.LEAST_FEE)\r\n            // 查询导航路径并开启拖拽导航\r\n            route.search()\r\n        })\r\n\r\n        var polyLine = new AMap.Polyline({\r\n            path: path,\r\n            strokeWeight: 5,\r\n            borderWeight: 5, // 线条宽度，默认为 1\r\n            strokeStyle: \"solid\",\r\n            strokeColor: '#DC143C', // 线条颜色\r\n            lineJoin: 'round' // 折线拐点连接处样式\r\n        })\r\n        map.add(polyLine)\r\n\r\n\r\n        //实例化城市查询类\r\n        map.plugin('AMap.Geolocation', function () {\r\n            var geolocation = new AMap.Geolocation({\r\n                // 是否使用高精度定位，默认：true\r\n                enableHighAccuracy: true,\r\n                // 设置定位超时时间，默认：无穷大\r\n                timeout: 10000,\r\n                // 定位按钮的停靠位置的偏移量\r\n                offset: [10, 20],\r\n                //  定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\r\n                zoomToAccuracy: true,\r\n                //  定位按钮的排放位置,  RB表示右下\r\n                position: 'RB'\r\n            })\r\n\r\n            geolocation.getCurrentPosition(function (status, result) {\r\n                if (status == 'complete') {\r\n                    onComplete(result)\r\n                } else {\r\n                    onError(result)\r\n                }\r\n            });\r\n\r\n            function onComplete(data) {\r\n                // data是具体的定位信息\r\n                console.log(data)\r\n            }\r\n\r\n            function onError(data) {\r\n                // 定位出错\r\n                console.error(data)\r\n            }\r\n        })\r\n\r\n    },\r\n    methods: {}\r\n}\r\n</script>\r\n\r\n<style></style>\r\n"]}]}