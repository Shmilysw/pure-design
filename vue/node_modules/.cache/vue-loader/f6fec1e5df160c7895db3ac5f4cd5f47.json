{"remainingRequest":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Java_project\\pure-design\\vue\\src\\views\\Role.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Java_project\\pure-design\\vue\\src\\views\\Role.vue","mtime":1685966350196},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685880566717},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1685880569655},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1685880566716},{"path":"D:\\Java_project\\pure-design\\vue\\node_modules\\@vue\\cli-service\\node_modules\\vue-loader\\lib\\index.js","mtime":1685881029547}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQpleHBvcnQgZGVmYXVsdCB7DQogICAgbmFtZTogIlJvbGUiLA0KICAgIGRhdGEoKSB7DQogICAgICAgIHJldHVybiB7DQogICAgICAgICAgICB0YWJsZURhdGE6IFtdLA0KICAgICAgICAgICAgdG90YWw6IDAsDQogICAgICAgICAgICBwYWdlTnVtOiAxLA0KICAgICAgICAgICAgcGFnZVNpemU6IDEwLA0KICAgICAgICAgICAgbmFtZTogIiIsDQogICAgICAgICAgICBmb3JtOiB7fSwNCiAgICAgICAgICAgIGRpYWxvZ0Zvcm1WaXNpYmxlOiBmYWxzZSwNCiAgICAgICAgICAgIG1lbnVEaWFsb2dWaXM6IGZhbHNlLA0KICAgICAgICAgICAgbXVsdGlwbGVTZWxlY3Rpb246IFtdLA0KICAgICAgICAgICAgbWVudURhdGE6IFtdLA0KICAgICAgICAgICAgcHJvcHM6IHsNCiAgICAgICAgICAgICAgICBsYWJlbDogJ25hbWUnLA0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGV4cGVuZHM6IFtdLA0KICAgICAgICAgICAgY2hlY2tzOiBbXSwNCiAgICAgICAgICAgIHJvbGVJZDogMCwNCiAgICAgICAgICAgIHJvbGVGbGFnOiAnJywNCiAgICAgICAgICAgIGlkczogW10NCiAgICAgICAgfQ0KICAgIH0sDQogICAgY3JlYXRlZCgpIHsNCiAgICAgICAgdGhpcy5sb2FkKCkNCiAgICB9LA0KICAgIG1ldGhvZHM6IHsNCiAgICAgICAgbG9hZCgpIHsNCiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5nZXQoIi9yb2xlL3BhZ2UiLCB7DQogICAgICAgICAgICAgICAgcGFyYW1zOiB7DQogICAgICAgICAgICAgICAgICAgIHBhZ2VOdW06IHRoaXMucGFnZU51bSwNCiAgICAgICAgICAgICAgICAgICAgcGFnZVNpemU6IHRoaXMucGFnZVNpemUsDQogICAgICAgICAgICAgICAgICAgIG5hbWU6IHRoaXMubmFtZSwNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgdGhpcy50YWJsZURhdGEgPSByZXMuZGF0YS5yZWNvcmRzDQogICAgICAgICAgICAgICAgdGhpcy50b3RhbCA9IHJlcy5kYXRhLnRvdGFsDQogICAgICAgICAgICB9KQ0KDQogICAgICAgICAgICB0aGlzLnJlcXVlc3QuZ2V0KCIvbWVudS9pZHMiKS50aGVuKHIgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuaWRzID0gci5kYXRhDQogICAgICAgICAgICB9KQ0KDQogICAgICAgIH0sDQogICAgICAgIHNhdmUoKSB7DQogICAgICAgICAgICB0aGlzLnJlcXVlc3QucG9zdCgiL3JvbGUiLCB0aGlzLmZvcm0pLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT09ICcyMDAnKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygi5L+d5a2Y5oiQ5YqfIikNCiAgICAgICAgICAgICAgICAgICAgdGhpcy5kaWFsb2dGb3JtVmlzaWJsZSA9IGZhbHNlDQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZCgpDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5L+d5a2Y5aSx6LSlIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBzYXZlUm9sZU1lbnUoKSB7DQogICAgICAgICAgICB0aGlzLnJlcXVlc3QucG9zdCgiL3JvbGUvcm9sZU1lbnUvIiArIHRoaXMucm9sZUlkLCB0aGlzLiRyZWZzLnRyZWUuZ2V0Q2hlY2tlZEtleXMoKSkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIGlmIChyZXMuY29kZSA9PT0gJzIwMCcpIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5zdWNjZXNzKCLnu5HlrprmiJDlip8iKQ0KICAgICAgICAgICAgICAgICAgICB0aGlzLm1lbnVEaWFsb2dWaXMgPSBmYWxzZQ0KDQogICAgICAgICAgICAgICAgICAgIC8vIOaTjeS9nOeuoeeQhuWRmOinkuiJsuWQjumcgOimgemHjeaWsOeZu+W9lQ0KICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5yb2xlRmxhZyA9PT0gJ1JPTEVfQURNSU4nKSB7DQogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoImxvZ291dCIpDQogICAgICAgICAgICAgICAgICAgIH0NCg0KICAgICAgICAgICAgICAgIH0gZWxzZSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IocmVzLm1zZykNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBoYW5kbGVBZGQoKSB7DQogICAgICAgICAgICB0aGlzLmRpYWxvZ0Zvcm1WaXNpYmxlID0gdHJ1ZQ0KICAgICAgICAgICAgdGhpcy5mb3JtID0ge30NCiAgICAgICAgfSwNCiAgICAgICAgaGFuZGxlRWRpdChyb3cpIHsNCiAgICAgICAgICAgIHRoaXMuZm9ybSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkocm93KSkNCiAgICAgICAgICAgIHRoaXMuZGlhbG9nRm9ybVZpc2libGUgPSB0cnVlDQogICAgICAgIH0sDQogICAgICAgIGRlbChpZCkgew0KICAgICAgICAgICAgdGhpcy5yZXF1ZXN0LmRlbGV0ZSgiL3JvbGUvIiArIGlkKS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMjAwJykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuWIoOmZpOaIkOWKnyIpDQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZCgpDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5Yig6Zmk5aSx6LSlIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICBoYW5kbGVTZWxlY3Rpb25DaGFuZ2UodmFsKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZyh2YWwpDQogICAgICAgICAgICB0aGlzLm11bHRpcGxlU2VsZWN0aW9uID0gdmFsDQogICAgICAgIH0sDQogICAgICAgIGRlbEJhdGNoKCkgew0KICAgICAgICAgICAgbGV0IGlkcyA9IHRoaXMubXVsdGlwbGVTZWxlY3Rpb24ubWFwKHYgPT4gdi5pZCkgIC8vIFt7fSwge30sIHt9XSA9PiBbMSwyLDNdDQogICAgICAgICAgICB0aGlzLnJlcXVlc3QucG9zdCgiL3JvbGUvZGVsL2JhdGNoIiwgaWRzKS50aGVuKHJlcyA9PiB7DQogICAgICAgICAgICAgICAgaWYgKHJlcy5jb2RlID09PSAnMjAwJykgew0KICAgICAgICAgICAgICAgICAgICB0aGlzLiRtZXNzYWdlLnN1Y2Nlc3MoIuaJuemHj+WIoOmZpOaIkOWKnyIpDQogICAgICAgICAgICAgICAgICAgIHRoaXMubG9hZCgpDQogICAgICAgICAgICAgICAgfSBlbHNlIHsNCiAgICAgICAgICAgICAgICAgICAgdGhpcy4kbWVzc2FnZS5lcnJvcigi5om56YeP5Yig6Zmk5aSx6LSlIikNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgICAgICByZXNldCgpIHsNCiAgICAgICAgICAgIHRoaXMubmFtZSA9ICIiDQogICAgICAgICAgICB0aGlzLmxvYWQoKQ0KICAgICAgICB9LA0KICAgICAgICBoYW5kbGVTaXplQ2hhbmdlKHBhZ2VTaXplKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZyhwYWdlU2l6ZSkNCiAgICAgICAgICAgIHRoaXMucGFnZVNpemUgPSBwYWdlU2l6ZQ0KICAgICAgICAgICAgdGhpcy5sb2FkKCkNCiAgICAgICAgfSwNCiAgICAgICAgaGFuZGxlQ3VycmVudENoYW5nZShwYWdlTnVtKSB7DQogICAgICAgICAgICBjb25zb2xlLmxvZyhwYWdlTnVtKQ0KICAgICAgICAgICAgdGhpcy5wYWdlTnVtID0gcGFnZU51bQ0KICAgICAgICAgICAgdGhpcy5sb2FkKCkNCiAgICAgICAgfSwNCiAgICAgICAgYXN5bmMgc2VsZWN0TWVudShyb2xlKSB7DQogICAgICAgICAgICB0aGlzLnJvbGVJZCA9IHJvbGUuaWQNCiAgICAgICAgICAgIHRoaXMucm9sZUZsYWcgPSByb2xlLmZsYWcNCg0KICAgICAgICAgICAgLy8g6K+35rGC6I+c5Y2V5pWw5o2uDQogICAgICAgICAgICB0aGlzLnJlcXVlc3QuZ2V0KCIvbWVudSIpLnRoZW4ocmVzID0+IHsNCiAgICAgICAgICAgICAgICB0aGlzLm1lbnVEYXRhID0gcmVzLmRhdGENCg0KICAgICAgICAgICAgICAgIC8vIOaKiuWQjuWPsOi/lOWbnueahOiPnOWNleaVsOaNruWkhOeQhuaIkCBpZOaVsOe7hA0KICAgICAgICAgICAgICAgIHRoaXMuZXhwZW5kcyA9IHRoaXMubWVudURhdGEubWFwKHYgPT4gdi5pZCkNCiAgICAgICAgICAgIH0pDQoNCiAgICAgICAgICAgIHRoaXMucmVxdWVzdC5nZXQoIi9yb2xlL3JvbGVNZW51LyIgKyB0aGlzLnJvbGVJZCkudGhlbihyZXMgPT4gew0KICAgICAgICAgICAgICAgIHRoaXMuY2hlY2tzID0gcmVzLmRhdGENCiAgICAgICAgICAgICAgICB0aGlzLmlkcy5mb3JFYWNoKGlkID0+IHsNCiAgICAgICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNoZWNrcy5pbmNsdWRlcyhpZCkpIHsNCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOWPr+iDveS8muaKpemUme+8mlVuY2F1Z2h0IChpbiBwcm9taXNlKSBUeXBlRXJyb3I6IENhbm5vdCByZWFkIHByb3BlcnRpZXMgb2YgdW5kZWZpbmVkIChyZWFkaW5nICdzZXRDaGVja2VkJykNCiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJG5leHRUaWNrKCgpID0+IHsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLnRyZWUuc2V0Q2hlY2tlZChpZCwgZmFsc2UpDQogICAgICAgICAgICAgICAgICAgICAgICB9KQ0KICAgICAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgfSkNCiAgICAgICAgICAgICAgICB0aGlzLm1lbnVEaWFsb2dWaXMgPSB0cnVlDQogICAgICAgICAgICB9KQ0KICAgICAgICB9LA0KICAgIH0NCn0NCg=="},{"version":3,"sources":["Role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"Role.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div>\r\n        <div style=\"margin: 10px 0\">\r\n            <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\r\n            <!--      <el-input style=\"width: 200px\" placeholder=\"请输入邮箱\" suffix-icon=\"el-icon-message\" class=\"ml-5\" v-model=\"email\"></el-input>-->\r\n            <!--      <el-input style=\"width: 200px\" placeholder=\"请输入地址\" suffix-icon=\"el-icon-position\" class=\"ml-5\" v-model=\"address\"></el-input>-->\r\n            <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\r\n            <el-button type=\"warning\" @click=\"reset\">重置</el-button>\r\n        </div>\r\n        <div style=\"margin: 10px 0\">\r\n            <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\r\n            <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想' icon=\"el-icon-info\"\r\n                icon-color=\"red\" title=\"您确定批量删除这些数据吗？\" @confirm=\"delBatch\">\r\n                <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n            </el-popconfirm>\r\n            <!--      <el-upload action=\"http://localhost:9090/user/import\" :show-file-list=\"false\" accept=\"xlsx\" :on-success=\"handleExcelImportSuccess\" style=\"display: inline-block\">-->\r\n            <!--        <el-button type=\"primary\" class=\"ml-5\">导入 <i class=\"el-icon-bottom\"></i></el-button>-->\r\n            <!--      </el-upload>-->\r\n            <!--      <el-button type=\"primary\" @click=\"exp\" class=\"ml-5\">导出 <i class=\"el-icon-top\"></i></el-button>-->\r\n        </div>\r\n        <!-- card -->\r\n        <el-card>\r\n            <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\"\r\n                @selection-change=\"handleSelectionChange\">\r\n                <el-table-column type=\"selection\" width=\"55\"></el-table-column>\r\n                <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\r\n                <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\r\n                <el-table-column prop=\"flag\" label=\"唯一标识\"></el-table-column>\r\n                <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\r\n                <el-table-column label=\"操作\" width=\"280\" align=\"center\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\r\n                        <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\r\n                        <el-popconfirm class=\"ml-5\" confirm-button-text='确定' cancel-button-text='我再想想' icon=\"el-icon-info\"\r\n                            icon-color=\"red\" title=\"您确定删除吗？\" @confirm=\"del(scope.row.id)\">\r\n                            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\r\n                        </el-popconfirm>\r\n                    </template>\r\n                </el-table-column>\r\n            </el-table>\r\n            <div style=\"padding: 10px 0; display: flex;justify-content: center;\">\r\n                <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\" :current-page=\"pageNum\"\r\n                    :page-sizes=\"[2, 5, 10, 20]\" :page-size=\"pageSize\" layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=\"total\">\r\n                </el-pagination>\r\n            </div>\r\n            <el-dialog title=\"角色信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\">\r\n                <el-form label-width=\"80px\" size=\"small\">\r\n                    <el-form-item label=\"名称\">\r\n                        <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"唯一标识\">\r\n                        <el-input v-model=\"form.flag\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"描述\">\r\n                        <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n            <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVis\" width=\"30%\">\r\n                <el-tree :props=\"props\" :data=\"menuData\" show-checkbox node-key=\"id\" ref=\"tree\"\r\n                    :default-expanded-keys=\"expends\" :default-checked-keys=\"checks\">\r\n                    <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\r\n                        <span><i :class=\"data.icon\"></i> {{ data.name }}</span>\r\n                    </span>\r\n                </el-tree>\r\n                <div slot=\"footer\" class=\"dialog-footer\">\r\n                    <el-button @click=\"menuDialogVis = false\">取 消</el-button>\r\n                    <el-button type=\"primary\" @click=\"saveRoleMenu\">确 定</el-button>\r\n                </div>\r\n            </el-dialog>\r\n        </el-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: \"Role\",\r\n    data() {\r\n        return {\r\n            tableData: [],\r\n            total: 0,\r\n            pageNum: 1,\r\n            pageSize: 10,\r\n            name: \"\",\r\n            form: {},\r\n            dialogFormVisible: false,\r\n            menuDialogVis: false,\r\n            multipleSelection: [],\r\n            menuData: [],\r\n            props: {\r\n                label: 'name',\r\n            },\r\n            expends: [],\r\n            checks: [],\r\n            roleId: 0,\r\n            roleFlag: '',\r\n            ids: []\r\n        }\r\n    },\r\n    created() {\r\n        this.load()\r\n    },\r\n    methods: {\r\n        load() {\r\n            this.request.get(\"/role/page\", {\r\n                params: {\r\n                    pageNum: this.pageNum,\r\n                    pageSize: this.pageSize,\r\n                    name: this.name,\r\n                }\r\n            }).then(res => {\r\n                this.tableData = res.data.records\r\n                this.total = res.data.total\r\n            })\r\n\r\n            this.request.get(\"/menu/ids\").then(r => {\r\n                this.ids = r.data\r\n            })\r\n\r\n        },\r\n        save() {\r\n            this.request.post(\"/role\", this.form).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"保存成功\")\r\n                    this.dialogFormVisible = false\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"保存失败\")\r\n                }\r\n            })\r\n        },\r\n        saveRoleMenu() {\r\n            this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"绑定成功\")\r\n                    this.menuDialogVis = false\r\n\r\n                    // 操作管理员角色后需要重新登录\r\n                    if (this.roleFlag === 'ROLE_ADMIN') {\r\n                        this.$store.commit(\"logout\")\r\n                    }\r\n\r\n                } else {\r\n                    this.$message.error(res.msg)\r\n                }\r\n            })\r\n        },\r\n        handleAdd() {\r\n            this.dialogFormVisible = true\r\n            this.form = {}\r\n        },\r\n        handleEdit(row) {\r\n            this.form = JSON.parse(JSON.stringify(row))\r\n            this.dialogFormVisible = true\r\n        },\r\n        del(id) {\r\n            this.request.delete(\"/role/\" + id).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"删除成功\")\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"删除失败\")\r\n                }\r\n            })\r\n        },\r\n        handleSelectionChange(val) {\r\n            console.log(val)\r\n            this.multipleSelection = val\r\n        },\r\n        delBatch() {\r\n            let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\r\n            this.request.post(\"/role/del/batch\", ids).then(res => {\r\n                if (res.code === '200') {\r\n                    this.$message.success(\"批量删除成功\")\r\n                    this.load()\r\n                } else {\r\n                    this.$message.error(\"批量删除失败\")\r\n                }\r\n            })\r\n        },\r\n        reset() {\r\n            this.name = \"\"\r\n            this.load()\r\n        },\r\n        handleSizeChange(pageSize) {\r\n            console.log(pageSize)\r\n            this.pageSize = pageSize\r\n            this.load()\r\n        },\r\n        handleCurrentChange(pageNum) {\r\n            console.log(pageNum)\r\n            this.pageNum = pageNum\r\n            this.load()\r\n        },\r\n        async selectMenu(role) {\r\n            this.roleId = role.id\r\n            this.roleFlag = role.flag\r\n\r\n            // 请求菜单数据\r\n            this.request.get(\"/menu\").then(res => {\r\n                this.menuData = res.data\r\n\r\n                // 把后台返回的菜单数据处理成 id数组\r\n                this.expends = this.menuData.map(v => v.id)\r\n            })\r\n\r\n            this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\r\n                this.checks = res.data\r\n                this.ids.forEach(id => {\r\n                    if (!this.checks.includes(id)) {\r\n                        // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\r\n                        this.$nextTick(() => {\r\n                            this.$refs.tree.setChecked(id, false)\r\n                        })\r\n                    }\r\n                })\r\n                this.menuDialogVis = true\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style>\r\n.headerBg {\r\n    background: #eee !important;\r\n}\r\n</style>\r\n"]}]}